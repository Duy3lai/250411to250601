{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNWRa/OJ7bx9DG30X5Ss5sM"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":390},"id":"Wrgorv1tbKe_","executionInfo":{"status":"error","timestamp":1745110095307,"user_tz":-420,"elapsed":2646,"user":{"displayName":"Duy Nguyễn Trương Bảo","userId":"18053593021551728895"}},"outputId":"eff15a99-b993-4153-9807-b046d9683a80"},"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-30-22374b939948>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m#Name\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mu1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Enter user 1 name: '\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0mu2\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Enter user 2 name: '\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m   1175\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1176\u001b[0m             )\n\u001b[0;32m-> 1177\u001b[0;31m         return self._input_request(\n\u001b[0m\u001b[1;32m   1178\u001b[0m             \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprompt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1179\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"shell\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m   1217\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1218\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1219\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1220\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1221\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}],"source":["#20250420 I was on my bed, thinking about what to do with Python when ill wake up.\n","#Suddenly, I remembered the \"Word bomb\" game in roblox. So i made one with python!\n","#Pretty cool. First game ive ever done LOL, completed 7:45 so i took prolly 1hr.\n","\n","import requests\n","import time\n","\n","#Name\n","u1 = input('Enter user 1 name: ')\n","u2 = input('Enter user 2 name: ')\n","\n","#Health\n","healthU1, healthU2 = 3,3\n","\n","bannedWords = [] #List of banned words\n","\n","while True: #THE BIGGEST GUY\n","\n","  #FIRST USER\n","  while True:\n","    answerU1 = str(input(f\"Enter {u1}'s word: \")) #Input answer of user 1\n","    if answerU1 in bannedWords:\n","      healthU1 -= 1\n","      print(f\"Word already used. {u1} lost one point. Point left: {healthU1}\")\n","      break\n","    if answerU1 not in bannedWords:\n","      bannedWords.append(answerU1)\n","      #URL\n","      url = f'https://api.dictionaryapi.dev/api/v2/entries/en/{answerU1}' #Send url\n","      response = requests.get(url)\n","      print(response.status_code)\n","      time.sleep(1)\n","      #STATUS RESPONSE\n","      if response.status_code != 200: #Check if status code success\n","        healthU1 -= 1\n","        print(f\"Health number of {u1} is now: {healthU1}\") #Deduct HP if not success\n","      else:\n","        data = response.json() #READ THE DATA\n","        print('Definition:', data[0]['meanings'][0]['definitions'][0]['definition']) #Show definition\n","        print('Great! Lets move on!')\n","      break\n","  #Check when lose:\n","  if healthU1 == 0 or healthU2 == 0:\n","    if healthU1 == 0: print(f\"{u2} is the winner!\")\n","    else: print(f\"{u1} is the winner!\")\n","    break\n","  #SECOND USER\n","  while True:\n","    answerU2 = str(input(f\"Enter {u2}'s word: \")) #Input answer of user 2\n","    if answerU2 in bannedWords:\n","      healthU2 -= 1\n","      print(f\"Word already used. {u2} lost one point. Point left: {healthU2}\")\n","      break\n","    if answerU2 not in bannedWords:\n","      bannedWords.append(answerU2)\n","      #URL\n","      url = f'https://api.dictionaryapi.dev/api/v2/entries/en/{answerU2}'\n","      response = requests.get(url)\n","      print(response.status_code)\n","      time.sleep(1)\n","      #STATUS RESPONSE\n","      if response.status_code != 200:\n","        healthU2 -= 1\n","        print(f\"Health number of {u2} is now: {healthU2}\")\n","      else:\n","        data = response.json() #READ THE DATA\n","        print('Definition:', data[0]['meanings'][0]['definitions'][0]['definition'])\n","        print(\"Great! Let's move on!\")\n","      break\n","  #Check when lose:\n","  if healthU1 == 0 or healthU2 == 0:\n","    if healthU1 == 0: print(f\"{u2} is the winner!\")\n","    else: print(f\"{u1} is the winner!\")\n","    break"]},{"cell_type":"code","source":[],"metadata":{"id":"7b2N_3pbjRDV"},"execution_count":null,"outputs":[]}]}